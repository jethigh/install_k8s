---
# tasks file for k8s
- name: Install modules required by containerd
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - br_netfilter
    - overlay

- name: Setup required sysctl params, these persist across reboots
  ansible.builtin.copy:
    src: 99-kubernetes-cri.conf
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    owner: root
    group: root
    mode: "0644"

- name: Reload sysctl
  shell:
    cmd: sysctl --system

- name: Disable swap
  shell: swapoff -a

- name: Disable swap in /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Disable SELinux on reboot
  selinux:
    state: disabled

- name: Disable selinux now
  shell: setenforce 0
  ignore_errors: yes

- name: Disable firewalld
  systemd:
    name: firewalld
    state: stopped
    enabled: no

- name: Install requred packages
  ansible.builtin.package:
    name: '{{ item }}'
    state: present
  loop:
    - conntrack-tools
    - iproute-tc

- name: Add first CRI-O repository
  ansible.builtin.uri:
    url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{CRIO_OS}}/devel:kubic:libcontainers:stable.repo"
    dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo
    owner: root
    group: root
    mode: "0644"
    status_code: ["200", "304"]

- name: Add second CRI-O repository
  ansible.builtin.uri:
    url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{CRIO_VERSION}}/{{CRIO_OS}}/devel:kubic:libcontainers:stable:cri-o:{{CRIO_VERSION}}.repo"
    dest: "/etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:{{CRIO_VERSION}}.repo"
    owner: root
    group: root
    mode: "0644"
    status_code: ["200", "304"]

- name: Install CRI-O and jq
  ansible.builtin.package:
    name: '{{ item }}'
    state: present
  loop:
    - cri-o
    - jq
  notify:
  - Restart crio

- name: keyPaths Fix
  ansible.builtin.replace:
    path: /etc/containers/policy.json
    regexp: '^.*keyPaths.*'
    replace: '                    "keyPath": "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"'

- name: Add DOWNLOAD_DIR to root's .bash_profile for interactive login shell
  ansible.builtin.lineinfile:
    path: /root/.bash_profile
    insertbefore: '^export PATH$'
    line: PATH=$PATH:/usr/local/bin

- name: Add DOWNLOAD_DIR to root's .bashrc for non-interactive login shell
  ansible.builtin.lineinfile:
    path: /root/.bashrc
    insertafter: EOF
    line: PATH=$PATH:/usr/local/bin

- name: Flush handlers
  meta: flush_handlers
